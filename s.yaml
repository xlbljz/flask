edition: 1.0.0        #  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范
name: ChatGPT_vcfriend       #  项目名称
# access: xxx-account1  #  秘钥别名

vars: # [全局变量，提供给各个服务使用]
  OPENAI_KEY: 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
  WECOM_AESKEY: kwdm58Mxh2izId3zhxkLAbTqKoz43B0EQwKwuEaRyLG
  WECOM_APP_SECRET: Qg-Xw_2wqCBrbhFl3h-MWaSavPUpD_krBeOS7kofq6g
  WECOM_COMID: wwff0560f161514799
  WECOM_TOKEN: kyfYSug6PrnlhX5wp3jvtvVhuLwQM6q
actions: # 自定义全局的执行逻辑
  pre-deploy: # 项目deploy执行之前执行
    - run: python -m venv /venv && . /venv/bin/activate && pip install -r requirements.txt # 要运行的命令行
      path: ./venv # 命令行运行的路径
  complete-deploy: # 项目deploy执行完成之后执行
    - run: python main.py # 要使用的插件
# 定义应用程序基本信息
app:
  name: my-flask-app
  description: "My first Flask app on Serverless Devs"
  region: cn-shanghai

# 定义函数服务信息
services:
  name: wechat_GPT #  服务名称
  internetAccess: true
  type: python-flask
  component: python-flask
  actions: # 自定义执行逻辑
    post-deploy: # 在deploy之后运行
      - run: python main.py
        path: ./venv
  events:
    - http:
        path: /wx
        method: GET
    - http:
        path: /wx
        method: POST
  gateway:
    component: serverless-gateway # 路由组件：HTTP URL和服务之间的映射规则
    props:
      routes:
        - route: /wx
          value: 80

# 定义函数服务的配置信息
python:
  version: 3.11.0

# 定义函数服务代码
codeUri: ./
handler: app:wechat_servant

https:
  domainName: chat.xlbljz.com
  certificateName: my-flask-app-ssl
  customDomain:
    protocol: https
    certificate:
      certificateName: my-flask-app-ssl
